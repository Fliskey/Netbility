/*  2021/3/18更新
    edit by 张腾宽
    代码作用为加工bin数据 使之直接能生成带定位点的异形二维码
    黑为1 白为0
    定位点为左上右上右下三个位置
    定位点数据为10111010  右定位点数据为01011101
    定位点的列 只有0-6和 57-63  都是7列
    分辨率为64*64
    结束标志为16*8个连续的0
    20 21行 文件名称及路径需要根据实际文件自行修改
    不具有文件压缩功能
    */
    
#include <iostream>
#include <fstream>
using namespace std;

int main()
{
	ifstream infile("C:\\Users\\omen\\Desktop\\1.bin", ios::in | ios::binary);
	ofstream outfile("C:\\Users\\omen\\Desktop\\12.bin", ios::out | ios::binary);
	char c;
	char left = 186, right = 93;	//定位点左右部分 
	int x = 0; int y = 0;
	//当数据没输入完时 
	while (1)
	{
		if ((y == 0 && x == 0) || (y == 1 && x == 0) || (y == 2 && x == 0) || (y == 3 && x == 0)\
			|| (y == 4 && x == 0) || (y == 5 && x == 0) || (y == 6 && x == 0))
		{
			outfile << left;
			x = x + 8;
		}
		else if ((y == 0 && x == 56) || (y == 1 && x == 56) || (y == 2 && x == 56) || (y == 3 && x == 56) || \
			(y == 4 && x == 56) || (y == 5 && x == 56) || (y == 6 && x == 56) || (y == 57 && x == 56) || \
			(y == 58 && x == 56) || (y == 59 && x == 56) || (y == 60 && x == 56) || (y == 61 && x == 56) || \
			(y == 62 && x == 56) || (y == 63 && x == 56))
		{
			outfile << right;
			x = 0;
			y++;
		}
		else
		{
			if (y == 64)	y = 0;
			infile >> std::noskipws >> c;
			if (infile.eof())	break;
			else
			{
				outfile << c;
				if (x == 56)
				{
					x = 0;
					y++;
				}
				else
				{
					x = x + 8;
				}
			}
		}
	}
	//输入完毕 打入结束标志 以连续16*8个0作为结束标志
	c = 0;
	//y==61  x==24 为本页二维码刚好能输出所有结束标志的位置
		//如果能输出完
	if (y < 61 || (y == 61 && x <= 24))
	{
		while (1)
		{
			//左定位点标志
			if ((y == 0 && x == 0) || (y == 1 && x == 0) || (y == 2 && x == 0) || (y == 3 && x == 0)\
				|| (y == 4 && x == 0) || (y == 5 && x == 0) || (y == 6 && x == 0))
			{
				outfile << left;
				x = x + 8;
			}
			//右定位点标志
			else if ((y == 0 && x == 56) || (y == 1 && x == 56) || (y == 2 && x == 56) || (y == 3 && x == 56) || \
				(y == 4 && x == 56) || (y == 5 && x == 56) || (y == 6 && x == 56) || (y == 57 && x == 56) || \
				(y == 58 && x == 56) || (y == 59 && x == 56) || (y == 60 && x == 56) || (y == 61 && x == 56) || \
				(y == 62 && x == 56) || (y == 63 && x == 56))
			{
				outfile << right;
				x = x + 8;
			}
			if (x == 64)
			{
				x = 0;
				y++;
			}
			if (y == 64)	break;
			outfile << c;
			x = x + 8;
		}
	}
	//如果不能输出完
	else
	{	//输出第一残余页内容
		while (1)
		{
			//左定位点标志
			if ((y == 0 && x == 0) || (y == 1 && x == 0) || (y == 2 && x == 0) || (y == 3 && x == 0)\
				|| (y == 4 && x == 0) || (y == 5 && x == 0) || (y == 6 && x == 0))
			{
				outfile << left;
				x = x + 8;
			}
			//右定位点标志
			else if ((y == 0 && x == 56) || (y == 1 && x == 56) || (y == 2 && x == 56) || (y == 3 && x == 56) || \
				(y == 4 && x == 56) || (y == 5 && x == 56) || (y == 6 && x == 56) || (y == 57 && x == 56) || \
				(y == 58 && x == 56) || (y == 59 && x == 56) || (y == 60 && x == 56) || (y == 61 && x == 56) || \
				(y == 62 && x == 56) || (y == 63 && x == 56))
			{
				outfile << right;
				x = x + 8;
			}
			if (x == 64)
			{
				x = 0;
				y++;
			}
			if (y == 64)	break;
			outfile << c;
			x = x + 8;
		}
		//输出第二页内容
		while (1)
		{
			//左定位点标志
			if ((y == 0 && x == 0) || (y == 1 && x == 0) || (y == 2 && x == 0) || (y == 3 && x == 0)\
				|| (y == 4 && x == 0) || (y == 5 && x == 0) || (y == 6 && x == 0))
			{
				outfile << left;
				x = x + 8;
			}
			//右定位点标志
			else if ((y == 0 && x == 56) || (y == 1 && x == 56) || (y == 2 && x == 56) || (y == 3 && x == 56) || \
				(y == 4 && x == 56) || (y == 5 && x == 56) || (y == 6 && x == 56) || (y == 57 && x == 56) || \
				(y == 58 && x == 56) || (y == 59 && x == 56) || (y == 60 && x == 56) || (y == 61 && x == 56) || \
				(y == 62 && x == 56) || (y == 63 && x == 56))
			{
				outfile << right;
				x = x + 8;
			}
			if (x == 64)
			{
				x = x + 8;
				y++;
			}
			if (y == 64)	break;
			outfile << c;
			x = x + 8;
		}
	}
	cout << "编码完成！" << endl;
}

